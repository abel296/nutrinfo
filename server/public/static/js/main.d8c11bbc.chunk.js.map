{"version":3,"sources":["components/pages/Home/Home.js","service/recipes.service.js","components/pages/Recipes/RecipesCard.js","components/pages/Recipes/RecipesList.js","components/pages/Recipes/LabelsFilter.js","components/shared/Spinner/Spinner.js","components/pages/Recipes/magnifying-glass.png","components/pages/Recipes/Recipes.js","components/pages/Recipe-details/Recipe-comments.js","components/pages/Recipe-details/Doughnut-chart.js","utils/capitalizeFirstLetter.js","components/pages/Recipe-details/Recipe-ingredients.js","utils/ordinalNumber.js","components/pages/Recipe-details/Recipe-steps.js","service/ratings.service.js","components/pages/Recipe-details/Recipe-rating.js","service/comments.service.js","components/pages/Recipe-details/Recipe-comment-form.js","components/pages/Recipe-details/Recipe-details.js","service/edamam.service.js","service/upload.service.js","components/pages/Recipe-form/close.svg","components/pages/Recipe-form/Recipe-form.js","components/pages/Profile/UserRecipeCard.js","components/pages/Profile/UserRecipesList.js","service/auth.service.js","components/pages/Profile/Profile.js","components/pages/Signup/Signup.js","components/pages/Login/Login.js","components/pages/User-Form/UserForm.js","components/routes/Routes.js","components/layout/Navigation/logo_large.png","components/layout/Navigation/Navigation.js","components/layout/Footer/Footer.js","components/shared/Alert/logo_small_icon_only_inverted.png","components/shared/Alert/Alert.js","components/App.js","index.js"],"names":["Home","className","Container","Row","Col","to","RecipeService","createRecipe","newRecipe","api","post","getRecipes","get","getRecipe","recipeId","getUserRecipes","userId","deleteRecipe","delete","editRecipe","put","deleteRecipesByUser","user_id","this","axios","create","baseURL","process","withCredentials","RecipeCard","image","title","_id","lg","md","xs","Card","Img","variant","src","url","Body","Title","RecipesList","recipes","map","elm","LabelsFilter","state","labelsSelected","ingredient","allLabelsArr","e","setState","target","value","props","filter","labelsSelectedCopy","label","includes","indexOfLabel","indexOf","splice","push","Form","Group","Control","size","type","placeholder","onChange","handleChange","idx","sm","onClick","handleClick","Component","Spinner","Recipes","undefined","recipeService","loadRecipes","then","response","data","catch","handleAlert","labelsArr","toLowerCase","allRecipes","filteredRecipes","recipe","every","labels","ingredients","some","ing","name","filterRecipes","magnifyingGlassImg","alt","RecipeComments","recipeComments","xl","owner","username","text","DoughnutChart","chartRef","React","createRef","nutrientsLabels","nutrientsData","quantity","myChart","Chart","current","datasets","backgroundColor","pluginService","register","beforeDraw","chart","width","height","ctx","clearRect","restore","fontSize","toFixed","font","textBaseline","Math","round","textX","measureText","textY","fillText","unitFontSize","unitText","unit","unitTextX","unitTextY","save","nutrientsOnly","ref","capitalizeFirstLetter","string","charAt","toUpperCase","slice","RecipeIngredients","nutrients","servings","ordinalNumber","number","j","k","RecipeSteps","steps","time","step","RatingsService","getRatings","recipe_id","createRating","ratingData","deleteRatingsByUser","Rating","rating","ratingsService","newValue","param","message","refreshList","isHalf","handleInputChange","recipeRating","CommentsService","getComments","createComment","commentData","deleteCommentsByUser","RecipeCommentForm","commentsService","preventDefault","onSubmit","handleSubmit","controlId","Label","as","rows","Button","RecipeDetails","loadRecipe","match","params","comments","ratings","Promise","all","responses","history","ratingsAverage","reduce","acc","length","loggedUser","EdamamService","getIngredientInfo","UploadService","uploadFile","fileForm","RecipeForm","handleFileUpload","isUploading","uploadData","FormData","append","files","uploadService","secure_url","ingToPush","stepToPush","edamamService","promisesArr","allIngredients","totalNutrients","ENERC_KCAL","nutrientsArr","FAT","CHOCDF","PROCNT","eachIng","arrAccLabels","forEach","healthLabels","closeModal","ingredientsCopy","stepsCopy","span","handleIngredientInputChange","id","custom","addIngredient","ListGroup","Item","deleteIngredient","close","handleStepInputChange","addStep","deleteStep","block","disabled","UserRecipeCard","err","UserRecipesList","userRecipes","AuthService","signup","userData","login","editUser","isLoggedIn","logOut","deleteUser","Profile","showForm","showDelete","authService","loadUserRecipes","user","responsesArr","refreshUser","togglemodalForm","togglemodalDelete","Modal","show","onHide","Header","closeButton","deleteAccount","Signup","password","storeUser","offset","Text","Login","UserForm","Routes","path","exact","render","Navigation","Navbar","expand","style","marginBottom","Brand","logo","Toggle","aria-controls","Collapse","Nav","textDecoration","Link","href","Footer","Date","getFullYear","Alert","Toast","autohide","onClose","delay","zIndex","position","color","bottom","right","App","alert","fetchUser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8c11bbc.chunk.js","sourcesContent":["import {Container, Row, Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport './Home.css'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <section className='hero'>\r\n                <Container className='d-flex align-items-center justify-content-center'>\r\n                    <Row className='justify-content-center align-items-center'>\r\n                        <Col>\r\n                            <h1>Welcome to Nutrinfo</h1>\r\n                            <h5>Get all the info you need from your own recipes!</h5>  \r\n                            <Link className='btn' to='/signup'>Signup!</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","import axios from 'axios'\n\nclass RecipeService {\n\n    constructor(){\n        this.api = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/recipes`,\n            withCredentials: true\n    })}\n\n    createRecipe = newRecipe => this.api.post('/createRecipe', newRecipe)\n    getRecipes = () => this.api.get(`/getAllRecipes`)\n    getRecipe = recipeId => this.api.get(`/getOneRecipe/${recipeId}`)\n    getUserRecipes = userId => this.api.get(`/getRecipesByUser/${userId}`)\n    deleteRecipe = recipeId => this.api.delete(`/deleteRecipe/${recipeId}`)\n    editRecipe = recipeId => this.api.put(`/editRecipe/${recipeId}`)\n    deleteRecipesByUser = user_id => this.api.delete(`/deleteRecipesByUser/${user_id}`)\n}\n\nexport default RecipeService","import { Link } from 'react-router-dom'\r\nimport { Col, Card } from 'react-bootstrap'\r\nimport './RecipeCard.css'\r\n\r\nconst RecipeCard = ({image, title, _id}) => {\r\n    return (\r\n        <Col className='recipe-card' lg={4} md={6} xs={12}>\r\n            <Card>\r\n            <div className='card-image-wrapper'>\r\n                <Card.Img className='card-image' variant=\"top\" src={image?.url}/>\r\n            </div>\r\n                <Card.Body>\r\n                    <Card.Title>{title}</Card.Title>\r\n                    <Link to={`/recipe-details/${_id}`} className='btn'>See details</Link> \r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n        )\r\n}\r\n\r\nexport default RecipeCard","import RecipeCard from './RecipesCard'\r\n\r\nimport {Row} from 'react-bootstrap'\r\n\r\nconst RecipesList = ({recipes}) => {\r\n    \r\n    return (\r\n        <Row>\r\n            {recipes?.map(elm => <RecipeCard key={elm._id} {...elm} />) }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RecipesList","import {Component} from 'react'\r\nimport {Row, Col, Container, Form} from 'react-bootstrap'\r\n\r\nimport './LabelsFilter.css'\r\n\r\nclass LabelsFilter extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            labelsSelected: [],\r\n            ingredient: ''\r\n        }\r\n        this.allLabelsArr = ['ALCOHOL_FREE', 'CELERY_FREE', 'CRUSTACEAN_FREE', 'DAIRY_FREE', 'EGG_FREE', 'FISH_FREE', 'FODMAP_FREE', 'GLUTEN_FREE', 'KETO_FRIENDLY', 'KIDNEY_FRIENDLY', 'KOSHER', 'LOW_POTASIUM', 'LUPINE_FREE', 'MUSTARD_FREE', 'LOW_FAT_ABS', 'NO_OIL_ADDED', 'LOW_SUGAR', 'PALEO', 'PEANUT_FREE', 'PESCATARIAN', 'PORK_FREE', 'RED_MEAT_FREE', 'SESAME_FREE', 'SHELLFISH_FREE', 'SOY_FREE', 'SUGAR_CONSCIOUS', 'TREE_NUT_FREE', 'VEGAN', 'VEGETARIAN', 'WHEAT_FREE']\r\n    }\r\n\r\n    handleChange (e) {\r\n        this.setState({ingredient: e.target.value}, () => this.props.filter(this.state))\r\n    }\r\n\r\n    handleClick(e) {\r\n\r\n        const labelsSelectedCopy = [...this.state.labelsSelected]\r\n        const label = e.target.value\r\n        \r\n        if(labelsSelectedCopy.includes(label)) {\r\n\r\n            const indexOfLabel = labelsSelectedCopy.indexOf(label)\r\n            labelsSelectedCopy.splice(indexOfLabel, 1)\r\n\r\n        } else {labelsSelectedCopy.push(label)}\r\n\r\n        e.target.className ? e.target.className = '' : e.target.className = 'active'\r\n\r\n        this.setState({labelsSelected: labelsSelectedCopy}, () => this.props.filter(this.state))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <Container className='labels-section'>\r\n            <h2>Filters</h2>\r\n\r\n            <Row className='labels'>\r\n                <Form.Group className='ing-filter'>\r\n                    <Form.Control  size=\"sm\" type=\"text\" placeholder=\"Search ingredient\" value={this.state.ingredient} onChange={((e) => this.handleChange (e))} />\r\n                </Form.Group>\r\n                {this.allLabelsArr.map((elm, idx) => {\r\n                    return (\r\n                        <Col className='label' md={12} sm={4} xs={6} key={idx} >\r\n                        <input type='button' value={elm} onClick={(e)=>this.handleClick(e)} />\r\n                        </Col>\r\n                    )\r\n                    })}\r\n                </Row>\r\n            </Container>\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default LabelsFilter\r\n\r\n\r\n","import './Spinner.css'\r\n\r\nconst Spinner = () => <div className=\"spinner\"></div>\r\n\r\nexport default Spinner\r\n","export default __webpack_public_path__ + \"static/media/magnifying-glass.23b6707c.png\";","import { Component } from 'react'\r\nimport RecipeService from '../../../service/recipes.service'\r\nimport RecipesList from './RecipesList'\r\nimport LabelsFilter from './LabelsFilter'\r\nimport Spinner from './../../shared/Spinner/Spinner'\r\nimport magnifyingGlassImg from './magnifying-glass.png'\r\n\r\nimport {Container, Col, Row} from 'react-bootstrap'\r\nimport './Recipes.css'\r\n\r\nclass Recipes extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            recipes: undefined\r\n        }\r\n        this.recipeService = new RecipeService()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadRecipes()\r\n    }\r\n\r\n    loadRecipes() {\r\n\r\n        this.recipeService\r\n            .getRecipes()\r\n            .then(response => this.setState({recipes: response.data}))\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error loading recipes'))\r\n    }\r\n\r\n    filterRecipes(state) {\r\n\r\n        const labelsArr = state.labelsSelected\r\n        const ingredient = state.ingredient.toLowerCase()\r\n\r\n        this.recipeService\r\n            .getRecipes()\r\n            .then(allRecipes => {\r\n                const filteredRecipes = allRecipes.data.filter(recipe => labelsArr.every(label => recipe.labels?.includes(label)) && recipe.ingredients.some(ing => ing.name.toLowerCase().includes(ingredient)))\r\n                this.setState({recipes: filteredRecipes})\r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error filtering recipes'))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n\r\n            <>\r\n            {this.state.recipes\r\n                ?\r\n                <>\r\n                    <Row className='recipes-section'>\r\n                        <Col lg={2} md={3} xs={12}>\r\n\r\n                            <LabelsFilter filter={(labelsArr)=>this.filterRecipes(labelsArr)} />\r\n\r\n                        </Col>\r\n                    {this.state.recipes[0]\r\n                    ?\r\n                        <Col lg={10} md={9} xs={12}>\r\n                            <Container>\r\n\r\n                                <h1>Recipes</h1>\r\n                                \r\n                                <RecipesList recipes={this.state.recipes} />\r\n\r\n                            </Container>\r\n                        </Col>\r\n                    \r\n                    :\r\n                    <Container>\r\n\r\n                        <Row className='justify-content-center'>\r\n                            <Col md={7}>\r\n\r\n                                <h5>The filters you applied doesn't match with any recipe</h5>\r\n                                <img className='glass-img' src={magnifyingGlassImg} alt='Magnifying glass logo' />\r\n\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    </Container>\r\n                   \r\n                }\r\n                    </Row>\r\n                </>\r\n                :\r\n                <>\r\n\r\n            <div className='spinner-div'>\r\n                <Spinner></Spinner>\r\n            </div>\r\n\r\n                </>\r\n            }\r\n            \r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Recipes","import { Col, Row } from 'react-bootstrap'\r\n\r\nconst RecipeComments = ({recipeComments}) => {\r\n    return (\r\n        <Row>\r\n            {recipeComments.map(elm => {\r\n                return (\r\n                <Col className='comment' xl={12} key={elm._id} >\r\n                    <div>\r\n                        <img src={elm.owner.image.url} alt={elm.owner.image.alt} />\r\n                        <h6>{elm.owner.username}</h6>\r\n                    </div>\r\n                    <p>{elm.text}</p>\r\n                <hr />\r\n                </Col>\r\n                )    \r\n            })\r\n            }  \r\n        </Row>\r\n         \r\n        )\r\n}\r\n\r\nexport default RecipeComments","import React from 'react'\r\nimport { Component } from 'react'\r\nimport Chart from 'chart.js'\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\n\r\nclass DoughnutChart extends Component {\r\n    constructor() {\r\n        super()\r\n        this.chartRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n       const nutrientsLabels = this.props.data.map(elm => elm.label).splice(1)\r\n       const nutrientsData = this.props.data.map(elm => elm.quantity).splice(1)\r\n\r\n        this.myChart = new Chart(this.chartRef.current, {\r\n            type: 'doughnut',\r\n            data: {\r\n                labels: nutrientsLabels,\r\n                datasets: [{\r\n                    data: nutrientsData,\r\n                    backgroundColor: [\"#EF476F\", '#FFD166', '#06D6A0']\r\n                }]\r\n            }\r\n        })\r\n\r\n        const props= this.props\r\n        \r\n        Chart.pluginService.register({\r\n            beforeDraw: function(chart) {\r\n                let width = chart.chart.width,\r\n                    height = chart.chart.height,\r\n                    ctx = chart.chart.ctx;\r\n                \r\n                ctx.clearRect(0 , 0, width, height)\r\n          \r\n                ctx.restore();\r\n                const fontSize = (height / 150).toFixed(2);\r\n                ctx.font = fontSize + \"em sans-serif\";\r\n                ctx.textBaseline = \"middle\";\r\n          \r\n                const text = Math.round(props.data[0].quantity),\r\n                    textX = Math.round((width - ctx.measureText(text).width) / 2),\r\n                    textY = height / 2 ;\r\n                ctx.fillText(text, textX, textY);\r\n\r\n                const unitFontSize = (height / 200).toFixed(2);\r\n                ctx.font = unitFontSize + \"em sans-serif\";\r\n                ctx.textBaseline = \"middle\";\r\n                \r\n                const unitText = props.data[0].unit,\r\n                    unitTextX = Math.round((width - ctx.measureText(text).width) / 2 + 5),\r\n                    unitTextY = height / 2 + 30\r\n                ctx.fillText(unitText, unitTextX, unitTextY)\r\n\r\n              ctx.save();\r\n            }\r\n          });\r\n    }\r\n\r\n    render() {\r\n\r\n        const nutrientsOnly = this.props.data.map(elm => elm).splice(1)\r\n    \r\n        return (\r\n            <>\r\n            <canvas ref={this.chartRef} />\r\n\r\n            <Row className=\"justify-content-around nutrients-row\">\r\n          \r\n                {nutrientsOnly.map((elm, idx) => {\r\n                    return (\r\n                        <Col sm={4}  key={idx} >\r\n                            <p className='nutrients-data'><strong>{elm.label}</strong>: {elm.quantity.toFixed(2)} {elm.unit}</p>\r\n                        </Col>\r\n                    )\r\n                })}\r\n            </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DoughnutChart\r\n","const capitalizeFirstLetter = (string) =>{\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport default capitalizeFirstLetter","import { Row, Col } from 'react-bootstrap'\r\n\r\nimport DoughnutChart from './Doughnut-chart'\r\n\r\nimport capitalizeFirstLetter from '../../../utils/capitalizeFirstLetter'\r\n\r\n\r\nconst RecipeIngredients = ({image, ingredients, labels, nutrients, servings}) => {\r\n    return (\r\n        <Row>\r\n            <Col lg={6}>\r\n                {image && <img className='recipe-img' src={image.url} alt={image.alt} />}\r\n                \r\n                \r\n                <h5>Ingredients</h5>\r\n                <ul>\r\n                    {ingredients.map(elm => <li key={elm._id}><strong>{capitalizeFirstLetter(elm.name)}</strong>: {elm.quantity} {elm.unit}</li>)}\r\n                </ul>\r\n                <p className='servings'><strong>Servings:</strong> {servings}</p>\r\n            </Col>\r\n            <Col lg={6}>\r\n                <h4>Nutrients</h4>\r\n                <DoughnutChart title='Nutrients' data={nutrients} />\r\n                <Row>\r\n                    {labels && labels.map((elm, idx)=> {\r\n                        return (\r\n                        <Col md={4} xs={6} key={idx}>\r\n                            <p className='health-labels' >\r\n                                {capitalizeFirstLetter(elm)} \r\n                            </p>\r\n                        </Col>\r\n                        )\r\n                        })}\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n         \r\n        )\r\n}\r\n\r\nexport default RecipeIngredients","const ordinalNumber = (number) => {\r\n\r\n        var j = number % 10,\r\n        k = number % 100;\r\n\r\n        if (j === 1 && k !== 11) {\r\n            return number + \"st\";\r\n        }\r\n        if (j === 2 && k !== 12) {\r\n            return number + \"nd\";\r\n        }\r\n        if (j === 3 && k !== 13) {\r\n            return number + \"rd\";\r\n        }\r\n\r\n        return number + \"th\";\r\n}\r\n\r\nexport default ordinalNumber","import { Row, Col } from 'react-bootstrap'\r\n\r\nimport capitalizeFirstLetter from '../../../utils/capitalizeFirstLetter'\r\nimport ordinalNumber from '../../../utils/ordinalNumber'\r\n\r\n\r\nconst RecipeSteps = ({steps, time}) => {\r\n    return (\r\n            <Row>\r\n                <Col>\r\n                    <h5>Steps</h5>\r\n                    <ul>\r\n                        {steps.map(elm =><li key={elm._id}><strong>{ordinalNumber(elm.number)}</strong> {capitalizeFirstLetter(elm.step)}</li>)}\r\n                    </ul>\r\n                    <p className='time'><strong>Time:</strong> {time} min</p>\r\n                </Col>\r\n            </Row>\r\n        )\r\n}\r\n\r\nexport default RecipeSteps","import axios from 'axios'\r\n\r\nclass RatingsService {\r\n\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL : `${process.env.REACT_APP_BASE_URL}/ratings`,\r\n            withCredentials : true\r\n        })\r\n    }\r\n\r\n    getRatings = recipe_id => this.api.get(`/getRecipeRatings/${recipe_id}`)\r\n    createRating = (recipe_id, ratingData) => this.api.post(`/createRating/${recipe_id}`, ratingData)\r\n    deleteRatingsByUser = (user_id) => this.api.delete(`/deleteRatingsByUser/${user_id}`)\r\n    \r\n}\r\n\r\nexport default RatingsService","import {Component} from 'react'\r\n\r\nimport ReactStars from \"react-rating-stars-component\"\r\n\r\nimport RatingsService from '../../../service/ratings.service'\r\n\r\nclass Rating extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            rating: 0\r\n        }\r\n\r\n        this.ratingsService = new RatingsService()\r\n    }\r\n\r\n    handleInputChange(newValue) {\r\n        \r\n        this.setState({rating: newValue}, () => this.createRating())\r\n        \r\n    }\r\n\r\n    createRating() {\r\n        \r\n        this.ratingsService\r\n            .createRating(this.props.param, this.state)\r\n            .then(response => {\r\n            if (response.data.message) {\r\n                this.props.handleAlert(true, 'Error', response.data.message)\r\n            }\r\n            this.props.refreshList()\r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error creating rating'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <ReactStars size={30} isHalf={true} onChange={newValue => this.handleInputChange(newValue)} />\r\n            {this.props.recipeRating === 'NaN' ? <p></p> : <h6>{this.props.recipeRating}</h6>}\r\n            </>\r\n        )\r\n    }   \r\n}\r\n\r\nexport default Rating","import axios from 'axios'\r\n\r\nclass CommentsService {\r\n\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL : `${process.env.REACT_APP_BASE_URL}/comments`,\r\n            withCredentials : true\r\n        })\r\n    }\r\n\r\n    getComments = recipe_id => this.api.get(`/getRecipeComments/${recipe_id}`)\r\n    createComment = (recipe_id, commentData) => this.api.post(`/createComment/${recipe_id}`, commentData)\r\n    deleteCommentsByUser = (user_id) => this.api.delete(`/deleteCommentsByUser/${user_id}`)\r\n    \r\n}\r\n\r\nexport default CommentsService","import {Component} from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport CommentsService from '../../../service/comments.service'\r\n\r\n\r\nclass RecipeCommentForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.commentsService = new CommentsService()\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault()\r\n        \r\n        this.commentsService\r\n            .createComment(this.props.param, this.state)\r\n            .then(() => {\r\n                this.setState({text: ''}, () => this.props.refreshList())\r\n                \r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error creating comment'))\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return (\r\n    \r\n            <Form onSubmit={e => this.handleSubmit(e)}>\r\n                <Form.Group controlId=\"commentTextArea\">\r\n                    <Form.Label>Comment</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} type='text' name='text' value={this.state.text} onChange={e => this.handleInputChange(e)} />\r\n                </Form.Group>\r\n                <Button type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </Form>\r\n             \r\n            )\r\n    }\r\n}\r\n\r\nexport default RecipeCommentForm","import { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './Recipe-details.css'\r\n\r\nimport RecipeComments from './Recipe-comments'\r\nimport RecipeIngredients from './Recipe-ingredients'\r\nimport RecipeSteps from './Recipe-steps'\r\nimport Rating from './Recipe-rating'\r\nimport RecipeCommentForm from './Recipe-comment-form'\r\nimport Spinner from './../../shared/Spinner/Spinner'\r\n\r\nimport capitalizeFirstLetter from '../../../utils/capitalizeFirstLetter'\r\n\r\n\r\nimport RecipeService from '../../../service/recipes.service'\r\nimport CommentsService from '../../../service/comments.service'\r\nimport RatingsService from '../../../service/ratings.service'\r\n\r\n\r\n\r\nclass RecipeDetails extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            recipe: undefined,\r\n            recipeComments: [],\r\n            recipeRating: 0\r\n        }\r\n\r\n        this.recipeService = new RecipeService()\r\n        this.commentsService = new CommentsService()\r\n        this.ratingsService = new RatingsService()\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.loadRecipe()\r\n    }\r\n\r\n    loadRecipe() {\r\n        const recipe_id = this.props.match.params.recipe_id\r\n        const recipe = this.recipeService.getRecipe(recipe_id)\r\n        const comments = this.commentsService.getComments(recipe_id)\r\n        const ratings = this.ratingsService.getRatings(recipe_id)\r\n\r\n        Promise\r\n            .all([recipe, comments, ratings])\r\n            .then(responses => {\r\n                if (responses[0].data.message) {\r\n                    \r\n                    this.props.handleAlert(true, 'Error', responses[0].data.message)\r\n                    this.props.history.push('/recipes')  \r\n                } else {\r\n                    const ratingsSum = responses[2]?.data.reduce((acc, elm) => acc + elm.rating, 0)\r\n                    const ratingsAverage = (ratingsSum/responses[2]?.data.length).toFixed(2)\r\n\r\n                    this.setState({recipe: responses[0]?.data, recipeComments: responses[1]?.data, recipeRating: ratingsAverage})\r\n                }\r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error getting recipe details'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container as='section'>\r\n\r\n            {this.state.recipe\r\n                ?\r\n\r\n                <>\r\n                <h2>{capitalizeFirstLetter(this.state.recipe.title)}</h2>\r\n                <p><strong>User:</strong> {this.state.recipe.owner.username}</p>\r\n\r\n                <RecipeIngredients {...this.state.recipe} />\r\n\r\n                <hr />\r\n\r\n                <RecipeSteps  {...this.state.recipe} />\r\n\r\n                {this.props.loggedUser && \r\n                    <>\r\n                    <Rating param={this.props.match.params.recipe_id} recipeRating={this.state.recipeRating} handleAlert={this.props.handleAlert} refreshList={() => this.loadRecipe()} />\r\n\r\n                    <RecipeCommentForm handleAlert={this.props.handleAlert} param={this.props.match.params.recipe_id} refreshList={() => this.loadRecipe()} />\r\n                    </>\r\n                }\r\n\r\n               \r\n                    <RecipeComments recipeComments = {this.state.recipeComments} />\r\n                \r\n\r\n                    <Link to='/recipes' className='btn go-back'>Go back</Link>\r\n                </>\r\n                :\r\n                <>\r\n                    <div className='spinner-div'>\r\n                        <Spinner></Spinner>\r\n                    </div>\r\n\r\n                </>\r\n            }\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RecipeDetails","import axios from 'axios'\r\n\r\nclass EdamamService {\r\n\r\n    constructor() {\r\n        this.api = axios.create({\r\n            baseURL : 'https://api.edamam.com/api',\r\n        })\r\n    }\r\n\r\n    getIngredientInfo = (ingredient, quantity, unit) => this.api.get(`/nutrition-data?app_id=9fcb4124&app_key=a90360aec028b68517fa17842976b5ee&ingr=${quantity}%20${unit}%20${ingredient}`)\r\n    \r\n}\r\n\r\nexport default EdamamService","import axios from 'axios'\n\nclass UploadService {\n\n    constructor() {\n        this.api = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/files`,\n            withCredentials: true\n        })\n    }\n\n    uploadFile = fileForm => this.api.post('/upload', fileForm)\n}\n\nexport default UploadService","export default __webpack_public_path__ + \"static/media/close.54e3dd7b.svg\";","import { Component } from 'react'\n\nimport RecipeService from '../../../service/recipes.service'\nimport EdamamService from '../../../service/edamam.service'\nimport UploadService from '../../../service/upload.service'\nimport { Container, Form, Button, Row, Col, ListGroup} from 'react-bootstrap'\nimport Spinner from '../../shared/Spinner/Spinner'\nimport './Recipe-form.css'\nimport close from './close.svg'\n\nclass RecipeForm extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            recipe: {\n                image: {\n                    url: 'https://masquevinilo.com/5324-thickbox_default/vinilo-decorativo-verduras-a-la-sarten.jpg',\n                    alt: 'frying pan with vegetables'\n                },\n                title: '',\n                ingredients: [],\n                nutrients: [],\n                steps: [],\n                time: 0,\n                servings: 0,\n                labels: [],\n            },\n            ingToPush: {\n                name: '',\n                quantity: 0,\n                unit: ''\n            },            \n            stepToPush: {\n                step: '',\n                number: 0\n            },            \n            isUploading: false\n        }\n\n        this.recipeService = new RecipeService()\n        this.edamamService = new EdamamService()\n        this.uploadService = new UploadService()\n    }\n\n    handleInputChange(e) {\n        const {name, value} = e.target\n        this.setState( {recipe: {...this.state.recipe, [name]: value}} )\n    }\n\n    handleIngredientInputChange(e) {\n        const {name, value} = e.target \n        this.setState( { ingToPush: {...this.state.ingToPush, [name]: value} })\n    }\n\n    addIngredient() {\n        this.setState( {recipe: {...this.state.recipe, ingredients: [...this.state.recipe.ingredients, this.state.ingToPush]}})\n    }\n\n    handleStepInputChange(e) {\n        const {name, value} = e.target \n        this.setState( { stepToPush: {...this.state.stepToPush, [name]: value} })\n    }\n\n    addStep() {\n        this.setState( {recipe: {...this.state.recipe, steps: [...this.state.recipe.steps, this.state.stepToPush]}})\n    }\n    \n    handleSubmit(e) {\n\n        e.preventDefault()\n\n        const promisesArr = this.state.recipe.ingredients\n        .map(ing => this.edamamService.getIngredientInfo(ing.name, ing.quantity, ing.unit).then(response => response.data))\n       \n        Promise.all(promisesArr)\n        .then(allIngredients => {\n\n            if(allIngredients.some(elm => !elm.totalNutrients.ENERC_KCAL)) {\n\n                return false\n\n            } else {\n\n                const nutrientsArr = allIngredients.reduce((acc, elm) => {\n\n                    acc[0].quantity += elm.totalNutrients.ENERC_KCAL.quantity\n                    acc[1].quantity += elm.totalNutrients.FAT.quantity\n                    acc[2].quantity += elm.totalNutrients.CHOCDF.quantity\n                    acc[3].quantity += elm.totalNutrients.PROCNT.quantity\n\n                    return acc\n\n                } , [{label:'Energy',quantity: 0, unit:'kcal'},{label:'Fat',quantity: 0, unit:'g'},{label:'Carbs',quantity: 0, unit:'g'},{label:'Protein',quantity: 0, unit:'g'}])\n            \n                const labelsArr =  allIngredients.reduce((acc, eachIng, idx) => {\n                \n                    const arrAccLabels = []\n                    acc.forEach(label => {\n                        if (eachIng.healthLabels.includes(label)) {\n\n                            arrAccLabels.push(label)\n                            \n                        }\n                    })\n                    return arrAccLabels\n                }, allIngredients[0].healthLabels)\n\n                this.setState({recipe: {...this.state.recipe, nutrients: nutrientsArr, labels: labelsArr}})\n                return true\n            }\n        })\n        .then((response) => {\n\n            if (response) {\n\n                const user_id = this.props.loggedUser._id\n                return this.recipeService.createRecipe({...this.state.recipe, owner: user_id})\n                    \n            } else {return false}\n        })\n        .then(response => {\n            if (response) {\n                this.props.closeModal()\n                this.props.refreshList()\n                this.props.handleAlert(true, 'Registration saved', 'The recipe has been saved into our Database')\n            } else {this.props.handleAlert(true, 'Error', \"Some of the ingredients doesn't exist or some of the quantities are 0\")}\n        })\n        .catch(() => this.props.handleAlert(true, 'Error', 'Error creating recipe'))\n    }\n\n    handleFileUpload = e => {\n\n        this.setState({ isUploading: true})\n\n        const uploadData = new FormData()\n        uploadData.append('imageUrl', e.target.files[0])\n\n        this.uploadService\n            .uploadFile(uploadData)\n            .then(response => {\n                this.setState({\n                    isUploading: false,\n                    recipe: {...this.state.recipe, image: {\n                        url: response.data.secure_url,\n                        alt: this.state.recipe.title\n                    }} \n                })\n            })\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error uploading image'))\n    }\n\n    deleteIngredient(idx) {\n\n        const ingredientsCopy = [...this.state.recipe.ingredients]\n        ingredientsCopy.splice(idx, 1)\n        this.setState({recipe: {...this.state.recipe, ingredients: ingredientsCopy}})\n        \n    }\n\n    deleteStep(idx) {\n        const stepsCopy = [...this.state.recipe.steps]\n        stepsCopy.splice(idx, 1)\n        this.setState({recipe: {...this.state.recipe, steps: stepsCopy}})\n    }\n\n    render() {\n        return(\n            <Container>\n\n                <Form onSubmit={e => this.handleSubmit(e)}>\n                    <Form.Group>\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control type=\"text\" name=\"title\" value={this.state.recipe.title} onChange={e => this.handleInputChange(e)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Row>\n                            <Col md={{span: 5}}>\n                                <Form.Label>Ingredient</Form.Label>                            \n                                <Form.Control type=\"text\" name=\"name\" value={this.state.ingToPush.name} onChange={e => this.handleIngredientInputChange(e)}/>\n                            </Col>\n                            <Col md={{span: 2}}>\n                                <Form.Label>Quantity</Form.Label>\n                                <Form.Control type=\"number\" name=\"quantity\" value={this.state.ingToPush.quantity} onChange={e => this.handleIngredientInputChange(e)}/>\n                            </Col>\n                            <Col md={{span: 2}}>\n                                <Form.Label>Unit</Form.Label>\n                                <Form.Control\n                                    as=\"select\"\n                                    className=\"mr-sm-2\"\n                                    id=\"inlineFormCustomSelect\"\n                                    name=\"unit\"\n                                    custom\n                                    onChange={e => this.handleIngredientInputChange(e)}\n                                >\n                                    <option value=''>Choose...</option>\n                                    <option value='g' >g</option>\n                                    <option value='Kg' >kg</option>\n                                    <option value='l' >l</option>\n                                    <option value='ml' >ml</option>\n                                </Form.Control>\n                            </Col>\n\n                            <Col className='add-ing-btn' md={{span: 3}}>\n                                <Button onClick={() => this.addIngredient()} type=\"button\">Add ingredient</Button>\n                            </Col>\n                        </Row>\n\n                        <Col className='item-col'>\n                            <ListGroup variant=\"flush\">\n                                    {this.state.recipe.ingredients?.map((elm, idx) =>\n                                    <>\n                                    <ListGroup.Item className='item-list' key={idx} >\n                                    {elm.name} {elm.quantity}{elm.unit} \n                                    <Button className='delete-button' onClick={() => this.deleteIngredient(idx)}><img src={close} alt='x icon' /></Button>\n                                    </ListGroup.Item>\n                                    </>\n                                    )}   \n                            </ListGroup>\n                        </Col>\n                        </Form.Group>\n\n                        <Form.Group> \n                        <Row>\n                            <Col md={{span: 2}}>\n                                <Form.Label>Number</Form.Label>                            \n                                <Form.Control type=\"number\" name=\"number\" value={this.state.stepToPush.number} onChange={e => this.handleStepInputChange(e)}/>\n                            </Col>\n\n                            <Col >\n                                <Form.Label>Step</Form.Label>\n                                <Form.Control type=\"text\" name=\"step\" value={this.state.stepToPush.step} onChange={e => this.handleStepInputChange(e)}/>\n                            </Col>\n\n                            <Col className='add-step-btn' md={{span: 3}}>\n                                <Button onClick={() => this.addStep()} type=\"button\">Add step</Button>\n                            </Col>\n                        </Row>\n\n                            <Col className='item-col' >\n                                <ListGroup variant=\"flush\">\n                                        {this.state.recipe.steps?.map((elm, idx) =>\n                                        <ListGroup.Item className='item-list' key={idx} >{elm.number} {elm.step}\n                                        <Button className='delete-button' onClick={() => this.deleteStep(idx)}><img src={close} alt='x icon' /></Button>\n                                        </ListGroup.Item>)}   \n                                </ListGroup>\n                            </Col>\n                        </Form.Group>\n                        <Form.Group>\n                            <Row>\n                                <Col>\n                                    <Form.Label>Time</Form.Label>\n                                    <Form.Control type=\"number\" name=\"time\" value={this.state.recipe.time} onChange={e => this.handleInputChange(e)} />\n                                </Col>\n                                <Col>\n                                    <Form.Label>Servings</Form.Label>\n                                    <Form.Control type=\"number\" name=\"servings\" value={this.state.recipe.servings} onChange={e => this.handleInputChange(e)} />\n                                </Col>\n                            </Row>\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Image (File) {this.state.isUploading && <Spinner />}</Form.Label>\n                            <Form.Control type=\"file\" name=\"imageUrl\" onChange={e => this.handleFileUpload(e)} />\n                        </Form.Group>                     \n                    \n                    <Button block type=\"submit\" disabled={this.state.isUploading}>{this.state.isUploading ? 'Waiting, uploading...' : 'New Recipe'}</Button>\n                    \n                </Form>\n            </Container>\n        )\n    }\n}\n\nexport default RecipeForm","import { Link } from 'react-router-dom'\nimport { Col, Card, Button } from 'react-bootstrap'\nimport './UserRecipeCard.css'\n\nimport RecipeService from '../../../service/recipes.service'\n\nconst UserRecipeCard = ({image, title, _id, refreshList, handleAlert}) => {\n\n    const recipeService = new RecipeService()\n\n    const deleteUserCard = () => {\n\n        recipeService\n            .deleteRecipe(_id)\n            .then(() => refreshList())\n            .catch(err => handleAlert(true, 'Error', 'Error removing recipe'))\n    }\n\n\n    return (\n        <Col lg={4} md={6} xs={12}>\n            <Card className='user-card'>\n            <div className='card-image-wrapper'>\n                <Card.Img className='card-image' variant=\"top\" src={image?.url}/>\n            </div>\n                <Card.Body>\n                    <Card.Title>{title}</Card.Title>\n                    <div className='profile-btn'>\n                        <Link to={`/recipe-details/${_id}`} className='btn profile-details-btn'>See details</Link>\n                        <Button onClick={() => deleteUserCard()} className='profile-details-btn delete-btn'>Delete Recipe</Button>\n                    </div>\n                </Card.Body>\n            </Card>\n        </Col>\n        )\n}\n\nexport default UserRecipeCard","import UserRecipeCard from './UserRecipeCard'\n\nimport {Row} from 'react-bootstrap'\n\nconst UserRecipesList = ({userRecipes, refreshList, handleAlert}) => {\n    \n    return (\n        <Row>\n            {userRecipes?.map(elm => <UserRecipeCard handleAlert={handleAlert} key={elm._id} {...elm} refreshList={refreshList} />) }\n        </Row>\n    )\n}\n\nexport default UserRecipesList","import axios from 'axios'\n\nclass AuthService {\n\n    constructor() {\n        this.api = axios.create({\n            baseURL : `${process.env.REACT_APP_BASE_URL}/auth`,\n            withCredentials : true\n        })\n    }\n\n    signup = userData => this.api.post('/signup', userData)\n    login = userData => this.api.post('/login', userData)\n    editUser = (userId, userData) => this.api.put(`/edit/${userId}`, userData)\n    isLoggedIn = () => this.api.get('/loggedin')\n    logOut = () => this.api.post('/logout')\n    deleteUser = (user_id) => this.api.delete(`/delete/${user_id}`)\n}\n\nexport default AuthService","import { Component } from 'react'\r\nimport RecipeForm from \"../Recipe-form/Recipe-form\"\r\nimport UserRecipesList from \"./UserRecipesList\"\r\nimport { Container, Row, Col, Button, Modal } from 'react-bootstrap'\r\nimport './Profile.css'\r\n\r\nimport RecipeService from '../../../service/recipes.service'\r\nimport AuthService from '../../../service/auth.service'\r\nimport CommentsService from '../../../service/comments.service'\r\nimport RatingsService from '../../../service/ratings.service'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Profile extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            userRecipes: [],\r\n            showForm: false,\r\n            showDelete: false\r\n        }\r\n\r\n        this.recipeService = new RecipeService ()\r\n        this.authService = new AuthService ()\r\n        this.commentsService = new CommentsService ()\r\n        this.ratingsService = new RatingsService ()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUserRecipes()\r\n    }\r\n\r\n    loadUserRecipes() {\r\n\r\n        this.recipeService\r\n            .getUserRecipes(this.props.loggedUser._id)\r\n            .then(response => this.setState({userRecipes: response.data}))\r\n            .catch(err => this.props.handleAlert(true, 'Error', 'Error loading recipes'))\r\n    }\r\n\r\n    togglemodalForm(value) {\r\n        this.setState({showForm: value})\r\n    }\r\n\r\n    deleteAccount() {\r\n\r\n        const user = this.authService.deleteUser(this.props.loggedUser._id)\r\n        const comments = this.commentsService.deleteCommentsByUser(this.props.loggedUser._id)\r\n        const ratings = this.ratingsService.deleteRatingsByUser(this.props.loggedUser._id)\r\n        const recipes = this.recipeService.deleteRecipesByUser(this.props.loggedUser._id)\r\n        \r\n\r\n        Promise\r\n            .all([user, comments, ratings, recipes])\r\n            .then(responsesArr => {\r\n                this.props.handleAlert(true, 'Alert', responsesArr[0].data.message)\r\n                this.props.history.push('/')\r\n                this.props.refreshUser()\r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error removing user'))\r\n    }\r\n\r\n    togglemodalDelete(value) {\r\n        this.setState({showDelete: value})\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <>\r\n                \r\n                <Row className='justify-content-center user-recipes'>\r\n          \r\n                    <Col lg={2} md={3} xs={4} className='avatar-section '>\r\n                        <Container>\r\n                            <Row className='avatar-row justify-content-center'>\r\n\r\n                            <header className='header'>\r\n                                <img className='profile-img' src={this.props.loggedUser.image.url} alt={this.props.loggedUser.image.alt}></img>\r\n                                <h1>Hi, {this.props.loggedUser.username}! </h1>\r\n                                <Link to={`edit-user/${this.props.loggedUser._id}`} className='btn edit-recipe-btn' >Edit Profile</Link>\r\n                            </header>\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n          \r\n                    <Col lg={12} md={12} xs={12}>\r\n                        <Container>\r\n                        \r\n                        <h1>My recipes</h1>\r\n                            <div>\r\n                                <Button onClick={() => this.togglemodalForm(true)} className='new-recipe-btn'>New Recipe</Button>\r\n                            </div>\r\n\r\n                        <UserRecipesList handleAlert={this.props.handleAlert} userRecipes={this.state.userRecipes} refreshList={() => this.loadUserRecipes()} ></UserRecipesList>                        \r\n                        </Container>\r\n                    </Col>\r\n                    <Button onClick={() => this.togglemodalDelete(true)} className='btn delete-btn delete-user-btn'>Delete User</Button>\r\n                </Row>\r\n    \r\n\r\n                <Modal show={this.state.showForm} onHide={() => this.togglemodalForm(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>New recipe</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <RecipeForm loggedUser={this.props.loggedUser} closeModal={() => this.togglemodalForm(false)} refreshList={() => this.loadUserRecipes()} handleAlert={this.props.handleAlert} />\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n                <Modal show={this.state.showDelete} onHide={() => this.togglemodalDelete(false)}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Are you sure?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                                <Button className='btn delete-btn' onClick={() => this.deleteAccount()}>Delete Account</Button>\r\n                        \r\n                    </Modal.Body>\r\n                </Modal>\r\n                \r\n\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Profile","import { Component } from \"react\"\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\"\r\nimport { Link } from 'react-router-dom'\r\nimport AuthService from '../../../service/auth.service'\r\n\r\n\r\nclass Signup extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n        this.authService = new AuthService()\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const {name, value} = e.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault()\r\n\r\n        this.authService\r\n            .signup(this.state)\r\n            .then(response => {\r\n                this.props.storeUser((response.data))\r\n                this.props.history.push('/')\r\n            })\r\n            .catch(err => this.props.handleAlert(true, 'Error', err.response.data.message))\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return(\r\n            <Container>\r\n\r\n                <Row>\r\n\r\n                    <Col md={{span: 4, offset: 4}}>\r\n\r\n                        <h1>Signup</h1>\r\n                        <hr></hr>\r\n\r\n                        <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <Form.Group>\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" name='username' value={this.state.username} onChange={e => this.handleInputChange(e)} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Do you already have an account?  <Link to='/login'>Log In here!</Link>\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name='password' value={this.state.password} onChange={e => this.handleInputChange(e)} />\r\n                        </Form.Group>\r\n                        <Button block type=\"submit\">Submit</Button>\r\n                        </Form>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup","import { Component } from \"react\"\r\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\"\r\nimport { Link } from 'react-router-dom'\r\nimport AuthService from '../../../service/auth.service'\r\n\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n\r\n        this.authService = new AuthService()\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const {name, value} = e.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        e.preventDefault()\r\n\r\n        this.authService\r\n            .login(this.state)\r\n            .then(response => {\r\n                this.props.storeUser((response.data))\r\n                this.props.history.push('/')\r\n            })\r\n            .catch(err => this.props.handleAlert(true, 'Error', err.response.data.message))\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n\r\n                <Row>\r\n\r\n                    <Col md={{span: 4, offset: 4}}>\r\n\r\n                        <h1>Login</h1>\r\n                        <hr></hr>\r\n\r\n                        <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <Form.Group>\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" name='username' value={this.state.username} onChange={e => this.handleInputChange(e)} />\r\n                            <Form.Text className=\"text-muted\">\r\n                            Don't you have an account? <Link to='/login'>Signup here!</Link>\r\n                            </Form.Text>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name='password' value={this.state.password} onChange={e => this.handleInputChange(e)} />\r\n                        </Form.Group>\r\n                        <Button block type=\"submit\">Submit</Button>\r\n                        </Form>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import {Component} from 'react'\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\r\nimport Spinner from '../../shared/Spinner/Spinner'\r\nimport AuthService from '../../../service/auth.service'\r\nimport UploadService from '../../../service/upload.service'\r\n\r\n\r\nclass UserForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: {\r\n                username: this.props.loggedUser.username,\r\n                password: '',\r\n                image: ''\r\n            },\r\n            isUploading: false\r\n        }\r\n        this.authService = new AuthService()\r\n        this.uploadService = new UploadService()\r\n\r\n    }\r\n\r\n    handleInputChange(e) {\r\n        const {name, value} = e.target\r\n        this.setState({user: {...this.state.user, [name]: value }})\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        this.authService\r\n            .editUser(this.props.match.params.user_id, this.state.user)\r\n            .then(() => {\r\n                const {username, password} = this.state.user\r\n                return this.authService.login({username, password})\r\n            })\r\n            .then(() => {\r\n                this.props.refreshUser()\r\n                this.props.history.push('/profile')\r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error editing user'))\r\n    }\r\n\r\n    handleFileUpload(e) {\r\n        this.setState({ isUploading: true})\r\n\r\n        const uploadData = new FormData()\r\n        uploadData.append('imageUrl', e.target.files[0])\r\n\r\n        this.uploadService\r\n            .uploadFile(uploadData)\r\n            .then(response => {\r\n                this.setState({\r\n                    isUploading: false,\r\n                    user: {...this.state.user, image: {\r\n                        url: response.data.secure_url,\r\n                        alt: this.state.user.username\r\n                    }} \r\n                })\r\n            })\r\n            .catch(() => this.props.handleAlert(true, 'Error', 'Error uploading image'))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Container>\r\n\r\n                <Row>\r\n\r\n                    <Col md={{span: 4, offset: 4}}>\r\n\r\n                        <h1>Edit User</h1>\r\n                        <hr></hr>\r\n\r\n                        <Form onSubmit={e => this.handleSubmit(e)}>\r\n                        <Form.Group>\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" name='username' value={this.state.user.username} onChange={e => this.handleInputChange(e)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name='password' value={this.state.user.password} onChange={e => this.handleInputChange(e)} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Image (File) {this.state.isUploading && <Spinner />}</Form.Label>\r\n                            <Form.Control type=\"file\" name=\"imageUrl\" onChange={e => this.handleFileUpload(e)} />\r\n                        </Form.Group>  \r\n                        <Button variant=\"dark\" block type=\"submit\">Submit</Button>\r\n                        </Form>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n        </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserForm","import { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport Home from '../pages/Home/Home'\r\nimport Recipes from '../pages/Recipes/Recipes'\r\nimport RecipeDetails from '../pages/Recipe-details/Recipe-details'\r\nimport Profile from '../pages/Profile/Profile'\r\nimport Signup from '../pages/Signup/Signup'\r\nimport Login from '../pages/Login/Login'\r\nimport UserForm from '../pages/User-Form/UserForm'\r\nimport Spinner from '../shared/Spinner/Spinner'\r\n\r\n\r\nconst Routes = ({storeUser, loggedUser, handleAlert, refreshUser}) => {\r\n    return (\r\n        <>\r\n        <Switch>\r\n            <Route path=\"/\" exact render={() => <Home />} />\r\n            <Route path=\"/recipes\" render={() => <Recipes handleAlert={handleAlert} />} />\r\n            <Route path=\"/recipe-details/:recipe_id\" render={(props) => <RecipeDetails {...props} loggedUser={loggedUser} handleAlert={handleAlert} />} />\r\n            <Route path=\"/signup\" render={props => <Signup storeUser={storeUser} {...props} handleAlert={handleAlert} />} />\r\n            <Route path=\"/login\" render={props => <Login storeUser={storeUser} {...props} handleAlert={handleAlert} />} />\r\n            {loggedUser === undefined\r\n            ? <Spinner /> :\r\n            loggedUser === null ?\r\n            <Redirect to='/' />\r\n            :\r\n            <>\r\n            <Route path=\"/profile\" render={props => <Profile loggedUser={loggedUser} handleAlert={handleAlert} {...props} refreshUser={refreshUser} /> } />\r\n            <Route path=\"/edit-user/:user_id\" render={(props) => <UserForm {...props} loggedUser={loggedUser} refreshUser={refreshUser} />} />\r\n            </>\r\n            }\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Routes","export default __webpack_public_path__ + \"static/media/logo_large.bf6a3bd5.png\";","import { Navbar, Nav } from 'react-bootstrap'\r\nimport \"./Navigation.css\"\r\nimport { NavLink } from 'react-router-dom'\r\nimport logo from './logo_large.png'\r\n\r\nimport AuthService from '../../../service/auth.service'\r\n\r\nconst Navigation = ({storeUser, loggedUser, handleAlert}) => {\r\n\r\n    const authService = new AuthService()\r\n\r\n    const logoutUser = () => {\r\n\r\n        authService\r\n            .logOut()\r\n            .then(() => {\r\n                storeUser(null)\r\n            })\r\n            .catch(() => handleAlert(true, 'Error', 'Failed to logout user'))\r\n    }\r\n\r\n    return (\r\n        <Navbar expand=\"lg\" className='navigation-bar' style={{marginBottom: 30}}>\r\n            <NavLink to='/'>\r\n                <Navbar.Brand> <img \r\n                    alt=\"\"\r\n                    src={logo}\r\n\r\n                    className=\"d-inline-block align-top logo-nav\"\r\n                />{' '}</Navbar.Brand>\r\n            </NavLink>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"ml-auto nav-rightside\">\r\n\r\n                    <NavLink style={{textDecoration: 'none'}} to='/recipes'>\r\n                        <Nav.Link className='navbar-link' as='span'>Recipes list</Nav.Link>\r\n                    </NavLink>\r\n\r\n                    {\r\n                        !loggedUser\r\n                            ?\r\n                            <>\r\n\r\n                                <NavLink style={{textDecoration: 'none'}} to='/login'>\r\n                                    <Nav.Link className='navbar-link' as='span'>Login</Nav.Link>\r\n                                </NavLink>\r\n                                <NavLink style={{textDecoration: 'none'}} to='/signup'>\r\n                                    <Nav.Link as='span' className='navbar-link'>Signup</Nav.Link>\r\n                                </NavLink>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            <NavLink style={{textDecoration: 'none'}} className='user-nav' to='/profile'>\r\n                                <img className='nav-img' src={loggedUser.image.url} alt={loggedUser.image.alt}></img>\r\n                                \r\n                                <Nav.Link href='/profile' as='span' className='navbar-link'>{loggedUser.username}</Nav.Link>\r\n                            </NavLink>\r\n\r\n                            <Nav.Link className='navbar-link' onClick={() => logoutUser()} >Logout</Nav.Link>\r\n                            </>\r\n                    }\r\n\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n\r\n            \r\n        </Navbar>  \r\n    )\r\n}\r\n\r\nexport default Navigation","import './Footer.css'\n\nconst Footer = () => <footer><small>Todos los derechos reservados {new Date().getFullYear()}</small></footer>\n\nexport default Footer","export default __webpack_public_path__ + \"static/media/logo_small_icon_only_inverted.16291f80.png\";","import { Toast } from \"react-bootstrap\"\n\nimport logo from './logo_small_icon_only_inverted.png'\n\nconst Alert = ({handleAlert, show, title = 'System message', text}) => {\n\n    return (\n        <Toast autohide show={show} onClose={() => handleAlert(false)} delay={3000} style={{zIndex: 9999, position: 'fixed', color: 'white', bottom: 38, right: 17, width: 400, backgroundColor:'#008650'}}>\n            <Toast.Header>\n                <img\n                    src={logo}\n                    className=\"rounded mr-2\"\n                    alt=\"Logotipo\"\n                    style={{ width: 20, height: 20 }}\n                />\n                <strong className=\"mr-auto\">{title}</strong>\n            </Toast.Header>\n            <Toast.Body>{text}</Toast.Body>\n        </Toast>\n    )\n}\n\n\nexport default Alert","import { Component } from 'react'\nimport './App.css'\n\nimport Routes from './routes/Routes'\nimport Navigation from './layout/Navigation/Navigation'\nimport Footer from './layout/Footer/Footer'\nimport Alert from './shared/Alert/Alert'\nimport AuthService from '../service/auth.service'\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedUser: undefined,\n      alert: {\n        show: false,\n        title: '',\n        text: ''\n      }\n    }\n\n    this.authService = new AuthService()\n  }\n\n  storeUser(loggedUser) {\n    this.setState({loggedUser})\n  }\n\n  fetchUser() {\n    this.authService\n    .isLoggedIn()\n    .then(response => {this.storeUser(response.data)})\n    .catch(() => this.storeUser(null))\n  }\n\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  handleAlert = (show, title, text) => this.setState({alert: { show, title, text }})\n\n  render() {\n    return(\n      <>\n      <Navigation handleAlert={this.handleAlert} storeUser={user => this.storeUser(user)} loggedUser={this.state.loggedUser} refreshUser={() => this.fetchUser()} />\n\n      <main>\n        <Routes storeUser={user => this.storeUser(user) } loggedUser={this.state.loggedUser} handleAlert={this.handleAlert} refreshUser={() => this.fetchUser()} />\n      </main>\n\n      <Footer />\n      <Alert handleAlert={this.handleAlert} show={this.state.alert.show} title={this.state.alert.title} text={this.state.alert.text}/>\n    </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <Router>\n\n      <App />\n      \n    </Router>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}